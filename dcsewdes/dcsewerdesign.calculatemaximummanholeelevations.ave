' DCSewerDesign.calculateMaximumManholeElevations
' (c) 2000, 2004, 2005 DORSCH Consult

' Calculates the maximum Manhole levels, based on the elevations from
' a point theme, according to the miminum cover provided
' NOTE: This presumes that the lines are flipped to the Flow Direction
' (use the function provided by DC Sewer Design)


' get the table
 viewActive = av.GetActiveDoc
 
 
lstThemes = viewActive.getActiveThemes
thmLine = 0
thmElevation = 0
if(lstThemes.count = 2)then
  for each thmTheme in lstThemes
    if((thmTheme.getFTab.getShapeClass.getClassName = "Polyline")and
      (thmTheme.getFTab.isEditable))then
      thmLine = thmTheme
    else 
      if(thmTheme.getFTab.getShapeClass.getClassName = "Point")then
        thmElevation = thmTheme
      end
    end
  end
end

ftbLine = thmLine.getFTab
fldLineShape = ftbLine.findField("Shape")

ftbElevation = thmElevation.getFTab
fldElevationShape = ftbElevation.findField("Shape")

' Get the line fields
lstLineFields = ftbLine.getFields
lstNumberFields = av.run("DCSewerDesign.Fields.returnNumberFields",lstLineFields)
fldMaxDownstreamElevation = Msgbox.choice(lstNumberFields, "Select the downstream elevation field.","DC Sewer Design")
if(fldMaxDownstreamElevation.asString = "nil")then
  exit
end
fldMaxUpstreamElevation = Msgbox.choice(lstNumberFields, "Select the upstream elevation field.","DC Sewer Design")
if(fldMaxUpstreamElevation.asString = "nil")then
  exit
end
fldGradient = Msgbox.choice(lstNumberFields, "Select the gradient field.","DC Sewer Design")
if(fldGradient.asString = "nil")then
  exit
end
fldMinimumCover = Msgbox.choice(lstNumberFields, "Select the minimum cover field.", "DC Sewer Design")
if(fldMinimumCover.asString = "nil")then
  exit
end

' Get the elevation field
lstElevationFields = ftbElevation.getFields
lstNumberFields = av.run("DCSewerDesign.Fields.returnNumberFields", lstElevationFields)
fldElevation = MsgBox.choice(lstNumberFields, "Select the elevation field.", "DC Sewer Design")
if(fldElevation.asString = "nil")then
  exit
end

' Ask for snapping radius
strSnappingRadius = MsgBox.input("Enter the snapping radius.","DC Sewer Design","5.0")
if(strSnappingRadius = nil)then
  exit
end
numSnappingRadius = strSnappingRadius.asNumber
if(numSnappingRadius.isNull)then
  exit
end

' 1 m should be fine for densification
numStepWidth = 1.0

' Data for status display
numCounter = 0 
numTotal = ftbLine.getNumRecords

'give the user a chance to kill script

av.showStopButton 

for each recLine in ftbLine
  numGradient = ftbLine.returnValue(fldGradient, recLine)
  pllLine = ftbLine.returnValue(fldLineShape, recLine)
  lstLine = pllLine.asList
  numLength = pllLine.returnLength
  numMaxDownstreamElevation = Number.makeNull
  numMaxUpstreamElevation = Number.makeNull
  if((lstLine.count = 1)and(lstLine.get(0).count = 2))then
    numMinimumCover = ftbLine.returnValue(fldMinimumCover, recLine)
    numMaxUpstreamElevation = 1000000.0
    pntUpstream = pllLine.along(0.0)
    
    ' Densify the polyline
    pllDense = pllLine.returnDensified(numStepWidth)
    
    ' Select elevation points within snapping radius
    plgnBuffer = pllLine.returnBuffered(numSnappingRadius)
    
    ftbElevation.selectByPolygon(plgnBuffer, #VTAB_SELTYPE_NEW)
    bmpSelection = ftbElevation.getSelection
    for each recElevation in bmpSelection
      pntElevation = ftbElevation.returnValue(fldElevationShape, recElevation)
      numElevation = ftbElevation.returnValue(fldElevation, recElevation)
      if(pntElevation.snap(pllDense, numSnappingRadius))then
        numDistance = pntUpstream.distance(pntElevation)
        numUpstreamElevation = numElevation +  (numGradient * numDistance)
        numMaxUpstreamElevation = numMaxUpstreamElevation.min(numUpstreamElevation)
      end
    end
    if(numMaxUpstreamElevation = 1000000.0)then
      numMaxUpstreamElevation = Number.makeNull
    else
      numMaxUpstreamElevation = numMaxUpstreamElevation - numMinimumCover
      numMaxDownstreamElevation = numMaxUpstreamElevation - (numGradient * numLength)
    end
  end
  ftbLine.setValue(fldMaxDownstreamElevation, recLine, numMaxDownstreamElevation)
  ftbLine.setValue(fldMaxUpstreamElevation, recLine, numMaxUpstreamElevation)

  ' Update status display
  numCounter = numCounter + 1 
  if(av.setStatus((numCounter/numTotal)*100).not)then
   ' User hit the stop button
    exit
  end
end

' Clean up
av.clearStatus