' DCScript.loadScriptsFromDir

' (c) 2001 DORSCH Consult

' requires UNIX EOLs
' load all the scripts found in a directory into arcview
' compile all scripts after loading

' no argument, returns nothing

' This library is free software; you can redistribute it and/or
' modify it under the terms of the GNU Lesser General Public
' License as published by the Free Software Foundation; either
' version 2.1 of the License, or (at your option) any later version.

' This library is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
' Lesser General Public License for more details.

' You should have received a copy of the GNU Lesser General Public
' License along with this library; if not, write to the Free Software
' Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


' select one script

lstFiles = FileDialog.returnFiles({"*.ave"},{"AVENUE Source (*.ave)"}, "Select one script.", "Load Scripts from Directory")

if((lstFiles = nil)or(lstFiles.count = 0))then
  ' user selected Cancel
  exit
end

' find all scripts in the directory

flnDirectory = lstFiles.get(0).returnDir
lstScriptFiles = flnDirectory.readFiles("*.ave")

' loop over all scripts

numLoaded = 0
blnOverwrite = nil
				
for each flnScript in lstScriptFiles
  lnfScript = Linefile.make(flnScript, #FILE_PERM_READ).setEolType(#FILE_UNIX_EOL)
  if(lnfScript = nil)then
    MsgBox.warning("Could not open file'"+flnScript.asString+"'.","Loading Scripts from Directory")
  else
  
    ' search script in project
    sedScript = nil
    strScriptName = flnScript.getBaseName.left(flnScript.getBasename.count-4)			
    for each docObj in av.getProject.getDocs
      if (docObj.is(SEd)) then
        if(docObj.getName.lcase = strScriptName.lcase)then
          sedScript = docObj
          break	
        end	
      end
    end
    
    blnUpdate = false
    
    ' create new script if necessary
    if(sedScript = nil)then
      sedScript = Sed.make
      av.getProject.addDoc(sedScript)	
      blnUpdate = true
    end  	
    strScriptSource = ""
    		
    ' try to set scriptname from first comment
    strScriptSource = lnfScript.readElt
    if(strScriptSource <> nil)then	
      if(strScriptSource.asTokens(" ").get(1).left(1)="'")then
        
        ' script starts with comment
        strFirstComment=strScriptSource.asTokens(" '"+NL).get(0)
        if(strFirstComment.lcase = sedScript.lcase)then
          sedScript.setName(strFirstComment)
        end		 
      end
    end		
    
    ' check if script has changed, loadScript
    strFileLine = lnfScript.readElt
    blnChanged = false
    numI = 1
    lstLines = sedScript.getSource.asTokens(NL)
    while(strFileLine <> nil)

      numI=numI+1
      if(numI >= lstLines.count)then
        blnChanged = true
      else
        strScriptLine = lstLines.get(numI)
        if(strFileLine <> strScriptLine)then
          blnChanged = true
        end
      end  
      strScriptSource = strScriptSource+strFileLine 
      strFileLine = lnfScript.readElt
    end
    lnfScript.close
  
    ' ask for permission to overwrite
    if(blnOverwrite = nil)then
      blnOverwrite = MsgBox.yesNo("Overwrite Scripts in Project?", "Loading Scripts from Directory", false)
    end
     
    if(blnOverwrite)then
     blnUpdate = true
    end
     
     ' update script 
     if(blnUpdate)then
       sedScript.setSource(strScriptSource)
       numLoaded = numLoaded+1  
     end
  end
end

' compile all scripts
av.run("DCScript.compileAllScripts",nil)

MsgBox.info("Loaded"++numLoaded++"scripts.","DC Script")