' DCWatDes.Model.Epanet.check

' (c) 2001 DORSCH Consult

' expects no arguments (called from menu)
' returns nothing (reports with message boxes)

' checks for unique dc_ids throughout the model
' checks if node1, node2 fields in the pipes table are of type string
' if pumps or valves are used in the model

' This library is free software; you can redistribute it and/or
' modify it under the terms of the GNU Lesser General Public
' License as published by the Free Software Foundation; either
' version 2.1 of the License, or (at your option) any later version.

' This library is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
' Lesser General Public License for more details.

' You should have received a copy of the GNU Lesser General Public
' License along with this library; if not, write to the Free Software
' Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

av.run("DCWatDes.Model.Epanet.ensureAliases",nil)

lstFTabs = av.run("DCWatDes.Model.Epanet.returnFTabDictionary", nil)

numToGo = lstFTabs.count
numCompleted = 0
numDoubleIDs = 0

blnErrorOccured = false

lstThemes = av.run("DCWatDes.Model.Epanet.returnThemeDictionary", nil)

for each thmFeature in lstThemes
  thmFeature.clearSelection
end 

for each ftbFeature in lstFTabs
  numFeature = 0
  fldID = ftbFeature.findField("dc_id")
  for each recFeature in ftbFeature
    strID = ftbFeature.returnValue(fldID, recFeature)
    for each ftbCheck in lstFTabs
      if(ftbCheck = ftbFeature)then
        numExpectedCount = 1
      else
        numExpectedCount = 0
      end
      bmpCheck = ftbCheck.getSelection.clone
      bmpCheck.clearAll
      ftbCheck.query("([dc_id].asString="+strID.asString.quote+")or([dc_id].asString="+strID.asString+")", bmpCheck, #VTAB_SELTYPE_NEW)
      numCount = bmpCheck.count 
      if(numCount > numExpectedCount)then
        numDoubleIDs = numDoubleIDs+numCount-numExpectedCount
        bmpOld = ftbCheck.getSelection.clone
        bmpCheck.or(bmpOld)
        ftbCheck.setSelection(bmpCheck)
        ftbCheck.updateSelection
      end
    end
    numFeature = numFeature+1
  end
  numCompleted = numCompleted+1
end

numDoubleIDs = numDoubleIDs/2
if(numDoubleIDs>0)then
  blnErrorOccured = true
  MsgBox.warning("The model has"++numDoubleIDs.asString++" duplicate ID(s)."+NL+"Check the Selection.", "DC Water Design")
else
  MsgBox.info("The model ID's are unique", "DC Water Design")
end

if(blnErrorOccured.not)then
  for each ftbTheme in lstFTabs
    ftbTheme.getSelection.clearAll
  end
end
for each ftbTheme in lstFtabs
  ftbTheme.updateSelection
end

av.getActiveDoc.getDisplay.invalidate(true)

ftbValves = lstFTabs.get("Valves")
ftbPumps = lstFTabs.get("Pumps")
ftbPipes = lstFTabs.get("Pipes")
if(ftbPipes = nil)then
  MsgBox.warning("No Pipes Theme selected.", "DC Water Design")
end
if((ftbValves <> nil)or(ftbPumps <> nil))then
  for each i in 1..2
    strFieldName = "node"+i.asString
    fldNode = ftbPipes.findField(strFieldName)
    if(fldNode = nil)then
      MsgBox.warning("The Pipes theme is missing the field '"+strFieldName+"'.", "DC Water Design")
    else
      if(fldNode.isTypeString.not)then
        MsgBox.warning("The type of field '"+strFieldName+"' in the Pipes theme should be string.","DC Water Design")
      end
    end
  end
end