' DCWatDes.Model.Epanet.run

' (c) 2000-2002 DORSCH Consult
' Export Pipe Model as Epanet Model, run Epanet and load the results

' This library is free software; you can redistribute it and/or
' modify it under the terms of the GNU Lesser General Public
' License as published by the Free Software Foundation; either
' version 2.1 of the License, or (at your option) any later version.

' This library is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
' Lesser General Public License for more details.

' You should have received a copy of the GNU Lesser General Public
' License along with this library; if not, write to the Free Software
' Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

av.run("DCWatDes.Model.Epanet.ensureAliases",nil)

'get File Locations
extDCWatDes = Extension.find("DC Water Design")
if(extDCWatDes <> nil)then
  dicPreferences = extDCWatDes.getPreferences
  strEpanet = dicPreferences.get("strEpanet")
else
  exit
end

' this will not export spatial data
fln_Xml = av.run("DCWatDes.Model.Epanet.writeInpFile", false)

strXml= fln_Xml.getFullName
strBasePath=strXml.left(strXml.count-3)

flnInp = (strBasePath+"inp").asFilename
flnOut = (strBasePath+"txt").asFilename
flnBin = (strBasePath+"bin").asFilename	

'clean up
File.delete(flnOut)
File.delete(flnBin)	

' check for Epanet
if(File.exists(strEpanet.asFilename).not)then
  MsgBox.error("Couldn't find the EPANET executable:"+NL+"'"+strEPANET+"'", "DC Water Design")
  exit	
end		 
	
' run Epanet

' System.execute(strEpanet.quote++(strBasePath+"inp").quote++(strBasePath+"txt").quote++(strBasePath+"bin").quote) 
av.run("DCWatDes.System.call", strEpanet.quote++(strBasePath+"inp").quote++(strBasePath+"txt").quote++(strBasePath+"bin").quote)

' wait for the result file appearing

strTimeout = dicPreferences.get("strCommandTimeout")
if((strTimeout <> nil)and(strTimeout.isNumber))then
  numTimeout = strTimeout.asNumber
else
  numTimeout = 30  
end

if(av.run("DCWatDes.File.waitFor", {flnOut, numTimeout}).not)then
  exit
end

twinReport = TextWin.make(flnOut, "DC Water Design")

if(av.run("DCWatDes.File.waitFor", {flnBin, numTimeout}).not)then
  exit
end

strResultFiles = "" 
flnLinkResults = (strBasePath+"-link-results.txt").asFilename
dicPreferences.set("strLinkResults", flnLinkResults.getFullName)
flnNodeResults = (strBasePath+"-node-results.txt").asFilename
dicPreferences.set("strNodeResults", flnNodeResults.getFullName)

for each flnResult in {flnNodeResults, flnLinkResults}
  strResultFiles = strResultFiles++flnResult.getFullName
  strResultFileName = flnResult.getFullName
  lstTables = av.getProject.getDocsWithGUI(av.findGUI("Table"))
  for each tableRemove in lstTables
    vtbRemove = tableRemove.getVTab
    if(vtbRemove <> nil)then
      if(vtbRemove.getBaseTableFilename.getFullName = strResultFileName)then
        vtbRemove.deActivate
        av.getProject.removeDoc(tableRemove)
        break
      end
    end
  end
  av.processAllInvals
  av.purgeObjects
  File.delete(flnResult)
end

strCmd = ("$AVEXT\dcwatdes\epanet2mysql.exe".asFilename.getFullname)++
         flnBin.getFullName+strResultFiles
av.run("DCWatDes.System.call", strCmd)

' wait for tables
for each flnResult in {flnLinkResults, flnNodeResults}
  if(av.run("DCWatDes.File.waitFor", {flnResult, numTimeout}).not)then
    exit
  end
end

' choose processing backend

strLoader = dicPreferences.get("strResultLoader")
if(strLoader = nil)then
  strLoader = "ArcView"
end
if(strLoader="MySql")then
  av.run("DCWatDes.Model.Epanet.Results.loadMySql", {flnLinkResults, flnNodeResults})
else if(strLoader="ArcView")then
  av.run("DCWatDes.Model.Epanet.Results.loadArcView", {flnLinkResults, flnNodeResults})
  else
    MsgBox.error("Couldn't find Result Loader"++strLoader.asString.quote+".","DC Water Design")
  end
end